{
  "version": 3,
  "sources": ["../../src/image/image.ts", "../../src/component.ts", "../../src/components/file-select.ts", "../../src/components/sprite-canvas.ts", "../../src/components/timeline.ts", "../../src/components/toolbar.ts", "../../src/components/sprite-editor.ts", "../../src/components/app-component.ts", "../../src/app.ts"],
  "sourcesContent": ["export class Image {\n  name: string;\n\n  constructor(_path: string, name: string) {\n    // load image from path, and add to the dom\n    // see Hell's example code\n\n    this.name = name;\n  }\n\n  // get pixels(): Array<number> {\n  // get image's pixels from the main canvas\n  // }\n\n  set pixels(newPixels: Array<number>) {\n    // set image's pixels on the main canvas\n  }\n\n  // etc\n}\n", "export interface Component {\n  id: string;\n  needsRender(state: Transaction): boolean;\n  render(\n    store: Store,\n    element: HTMLElement,\n    style: Style,\n  ): Component[];\n}\n\nexport class Transaction {\n  previousState: AppState;\n  currentState: AppState;\n  constructor(previousState: AppState, currentState: AppState) {\n    this.previousState = previousState;\n    this.currentState = currentState;\n  }\n}\n\nexport class Style {\n  element: HTMLStyleElement;\n  id: string;\n  constructor(id: string, element: HTMLStyleElement) {\n    this.id = id;\n    this.element = element;\n  }\n  push(styling: StyleItem[]) {\n    let css = \"\";\n    this.element.textContent = \"\";\n    styling.forEach((styling) => {\n      css = css.concat(\n        `\n      ${styling.selector} {\n        ${styling.styling}\n      }\n      `,\n      );\n    });\n    this.element.textContent = css;\n  }\n}\n\nexport class StyleItem {\n  selector: string;\n  styling: string;\n  constructor(selector: string, styling: string) {\n    this.selector = selector;\n    this.styling = styling;\n  }\n}\n\nexport class AppState {\n  selectingFile = true;\n  file: File | null = null;\n  clone(): AppState {\n    const clone = new AppState();\n    clone.selectingFile = this.selectingFile;\n    clone.file = this.file;\n    return clone;\n  }\n}\n\nexport class Store {\n  component: Component;\n  previousState: AppState | null = null;\n  state: AppState;\n  lastRenderedComponents: Set<string> = new Set();\n\n  constructor(state: AppState, component: Component) {\n    this.component = component;\n    this.state = state;\n  }\n\n  update() {\n    const currentRenderedComponents = new Set<string>();\n    this.updateComponent(this.component, currentRenderedComponents, null);\n\n    const unrenderedComponents = [...this.lastRenderedComponents].filter(\n      (id) => !currentRenderedComponents.has(id),\n    );\n    this.cleanupComponents(unrenderedComponents);\n    this.lastRenderedComponents = currentRenderedComponents;\n  }\n\n  updateComponent(\n    component: Component,\n    renderedComponents: Set<string>,\n    parent: HTMLElement | null,\n  ) {\n    let needsRender = false;\n    if (this.previousState) {\n      needsRender = component.needsRender(\n        new Transaction(this.previousState, this.state),\n      );\n    } else {\n      needsRender = true;\n    }\n\n    if (needsRender) {\n      let element = document.getElementById(component.id);\n      if (element) {\n        while (element.firstChild) {\n          element.removeChild(element.firstChild);\n        }\n        element.remove();\n      } else {\n        element = document.createElement(\"div\");\n        element.id = component.id;\n        element.className = component.id;\n      }\n\n      const styleId = `${component.id}-style`;\n      let localStyle = document.getElementById(styleId) as HTMLStyleElement;\n      if (!localStyle) {\n        localStyle = document.createElement(\"style\");\n        localStyle.id = styleId;\n      }\n\n      const children = component.render(\n        this,\n        element,\n        new Style(styleId, localStyle),\n      );\n\n      element.append(localStyle);\n      if (parent) {\n        parent.appendChild(element);\n      } else {\n        document.body.appendChild(element);\n      }\n\n      renderedComponents.add(component.id);\n\n      children.forEach((child) => {\n        this.updateComponent(child, renderedComponents, element);\n      });\n    } else {\n      renderedComponents.add(component.id);\n    }\n\n    this.previousState = this.state.clone();\n  }\n\n  cleanupComponents(unrenderedComponents: string[]) {\n    unrenderedComponents.forEach((id) => {\n      const element = document.getElementById(id);\n      if (element) {\n        element.remove();\n      }\n      const styleElement = document.getElementById(`${id}-style`);\n      if (styleElement) {\n        styleElement.remove();\n      }\n    });\n  }\n}\n", "import {\n  Component,\n  Store,\n  Style,\n  StyleItem,\n  Transaction,\n} from \"../component.ts\";\n\nexport class FileSelect implements Component {\n  id = `file-select`;\n  needsRender(_state: Transaction): boolean {\n    return true;\n  }\n  render(\n    store: Store,\n    element: HTMLElement,\n    style: Style,\n  ): Component[] {\n    const modalWidth = 400;\n    const modalPadding = 40;\n\n    element.innerHTML = `\n        <div class=\"modal\" position=\"relative\">\n        <svg class=\"border-svg\" width=100% height=100%>\n        <rect\n          x=10px\n          y=10px\n          rx=\"20\"\n          ry=\"20\"\n          fill=\"none\"\n          stroke-width=\"4\"\n          stroke-dasharray=\"10\"\n          stroke-linecap=\"round\"\n        />\n    </svg>\n        <h2>Import Spritesheet</h2>\n        <p>Choose a file to upload and get started.</p>\n        <div class=\"selected-file\">\n        ${\n      store.state.file === null\n        ? `\n            <input type=\"file\" id=\"file-input\">\n            <label for=\"file-input\">Open a File</label>\n        `\n        : `\n              <div class=\"selected-file-box\">\n                  <svg class=\"selected-file-cancel-icon\" width=\"20px\" height=\"20px\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" color=\"#e0e0e0\"><path d=\"M6.75827 17.2426L12.0009 12M17.2435 6.75736L12.0009 12M12.0009 12L6.75827 6.75736M12.0009 12L17.2435 17.2426\"></path></svg>\n                  <span class=\"selected-file-text\">${store.state.file.name}</span>\n                  <svg class=\"selected-file-proceed-icon\" width=\"20px\" height=\"20px\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" color=\"#e0e0e0\"><path d=\"M7 12.5L10 15.5L17 8.5\"></path><path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"></path></svg>\n              </div>\n              `\n    }\n        </div>\n        </div>\n        `;\n\n    const cancelIcon = element.querySelector(\".selected-file-cancel-icon\");\n    if (cancelIcon) {\n      cancelIcon.addEventListener(\"click\", () => {\n        store.state.file = null;\n        store.update();\n      });\n    }\n    const proceedIcon = element.querySelector(\".selected-file-proceed-icon\");\n    if (proceedIcon) {\n      proceedIcon.addEventListener(\"click\", () => {\n        if (store.state.file) {\n          store.state.selectingFile = false;\n          store.update();\n        }\n      });\n    }\n    const fileInput = element.querySelector(\"#file-input\");\n    if (fileInput) {\n      fileInput.addEventListener(\"change\", (event) => {\n        const input = event.target as HTMLInputElement;\n        const file = input.files ? input.files[0] : null;\n        if (file) {\n          store.state.file = file;\n        }\n        store.update();\n      });\n    }\n    style.push(\n      [\n        new StyleItem(\n          \"body\",\n          `\n            font-family: Arial, sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            background-color: #f0f0f0;\n            `,\n        ),\n        new StyleItem(\n          \".modal\",\n          `\n            position: relative;\n            width: ${modalWidth}px;\n            padding: ${modalPadding}px;\n            background: white;\n            border-radius: 30px;\n            box-shadow: 0 4px 10px #00000010;\n            text-align: center;\n            `,\n        ),\n        new StyleItem(\n          \".modal h2\",\n          `\n            font-size: 1.5rem;\n            color: #333;\n            `,\n        ),\n        new StyleItem(\n          \".modal p\",\n          `\n            font-size: 1rem;\n            color: #666;\n            margin-top: 8px;\n            margin-bottom: 20px;\n            `,\n        ),\n        new StyleItem(\n          '.modal input[type=\"file\"]',\n          `\n            display: none;\n            `,\n        ),\n        new StyleItem(\n          \".modal label\",\n          `\n            display: inline-block;\n            font-size: 1rem;\n            color: white;\n            border-radius: 8px;\n            cursor: pointer;\n            transition: background-color 0.3s ease;\n            `,\n        ),\n        new StyleItem(\n          \".border-svg\",\n          `\n            position: absolute;\n            transform: translate(-50%, 0%);\n            top: 0px;\n            pointer-events: none;\n            `,\n        ),\n        new StyleItem(\n          \".border-svg rect\",\n          `\n            height: calc(100% - 20px);\n            width: calc(100% - 20px);\n            stroke-dashoffset: 20;\n            stroke: #f5f5f5;\n            transition: stroke-dashoffset 0.2s ease,\n              stroke 0.2s ease;\n            `,\n        ),\n        new StyleItem(\n          \".modal:hover .border-svg rect\",\n          `\n            stroke-dashoffset: 0;\n            stroke: #e0e0e0;\n            `,\n        ),\n        new StyleItem(\n          \".selected-file\",\n          `\n              display: inline-block;\n              padding: 10px 15px 10px 15px;\n              background: #000000;\n              border-radius: 9px;         \n              text-align: center;\n            `,\n        ),\n        new StyleItem(\n          \".selected-file:hover\",\n          `\n              background-color: #505050;\n            `,\n        ),\n        new StyleItem(\n          \".selected-file-box\",\n          `\n              display: flex; \n              align-items: center;\n              justify-content: center;\n            `,\n        ),\n        new StyleItem(\n          \".selected-file-text\",\n          `\n              margin: 0px 10px 0px 10px;\n              color: #f0f0f0;    \n            `,\n        ),\n        new StyleItem(\n          \".selected-file-cancel-icon\",\n          `\n              stroke: #a0a0a0;\n              cursor: pointer;\n            `,\n        ),\n        new StyleItem(\n          \".selected-file-cancel-icon:hover\",\n          `\n              stroke: #fefefe;\n            `,\n        ),\n        new StyleItem(\n          \".selected-file-proceed-icon\",\n          `\n              stroke: #a0a0a0;\n              cursor: pointer;\n            `,\n        ),\n        new StyleItem(\n          \".selected-file-proceed-icon:hover\",\n          `\n              stroke: #fefefe;\n            `,\n        ),\n      ],\n    );\n    return [];\n  }\n}\n", "import {\n  Component,\n  Store,\n  Style,\n  StyleItem,\n  Transaction,\n} from \"../component.ts\";\n\nexport class SpriteCanvas implements Component {\n  private content: string;\n  id = `sprite-canvas`;\n\n  constructor(content: string) {\n    this.content = content;\n  }\n\n  needsRender(_state: Transaction): boolean {\n    return true;\n  }\n\n  render(\n    _store: Store,\n    element: HTMLElement,\n    style: Style,\n  ): Component[] {\n    element.innerHTML = `<p>${this.content}</p>`;\n    style.push(\n      [\n        new StyleItem(\n          `.${this.id}`,\n          `\n        grid-area: canvas;\n        height: auto;\n        background: #ffffff;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 1rem;\n        border-radius: 10px;\n        `,\n        ),\n      ],\n    );\n    return [];\n  }\n}\n", "import {\n  Component,\n  Store,\n  Style,\n  StyleItem,\n  Transaction,\n} from \"../component.ts\";\n\nexport class Timeline implements Component {\n  private content: string;\n  id = `timeline`;\n\n  constructor(content: string) {\n    this.content = content;\n  }\n\n  needsRender(_state: Transaction): boolean {\n    return true;\n  }\n\n  render(_store: Store, element: HTMLElement, style: Style): Component[] {\n    element.innerHTML = `<p>${this.content}</p>`;\n    style.push(\n      [\n        new StyleItem(\n          `.${this.id}`,\n          `\n          grid-column: span 3;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          background: #fff;\n          display: flex;\n          margin-top: 0.5rem;\n          padding: 1rem;\n          border-radius: 10px;\n      `,\n        ),\n      ],\n    );\n    return [];\n  }\n}\n", "import {\n  Component,\n  Store,\n  Style,\n  StyleItem,\n  Transaction,\n} from \"../component.ts\";\n\nexport class Toolbar implements Component {\n  private content: string;\n  gridArea: string;\n  id: string;\n  toggle: boolean;\n\n  constructor(position: \"left\" | \"right\", content: string) {\n    this.id = `toolbar-${position}`;\n    this.gridArea = position;\n    this.content = content;\n    this.toggle = false;\n  }\n\n  needsRender(_state: Transaction): boolean {\n    return true;\n  }\n\n  render(store: Store, element: HTMLElement, style: Style): Component[] {\n    element.innerHTML = `<p>${this.content}</p>`;\n    element.onclick = () => {\n      setTimeout(() => {\n        this.toggle = !this.toggle;\n        store.update();\n      }, 500);\n    };\n    style.push(\n      [\n        new StyleItem(\n          `.${this.id}`,\n          `\n          ${this.toggle ? \"background: #fff;\" : \"background: #ee9999;\"}\n          grid-area: ${this.gridArea};\n          ${\n            this.gridArea === \"left\"\n              ? \"margin-right: 0.5rem;\"\n              : \"margin-left: 0.5rem;\"\n          }\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 1rem;\n          border-radius: 10px;\n      `,\n        ),\n      ],\n    );\n    return [];\n  }\n}\n", "import {\n  Component,\n  Store,\n  Style,\n  StyleItem,\n  Transaction,\n} from \"../component.ts\";\nimport { SpriteCanvas } from \"./sprite-canvas.ts\";\nimport { Timeline } from \"./timeline.ts\";\nimport { Toolbar } from \"./toolbar.ts\";\n\nexport class SpriteEditor implements Component {\n  leftToolbar: Toolbar;\n  rightToolbar: Toolbar;\n  bottomToolbar: Timeline;\n  canvas: SpriteCanvas;\n  id = `sprite-editor`;\n\n  constructor() {\n    this.leftToolbar = new Toolbar(\"left\", \"Toolbar\");\n    this.rightToolbar = new Toolbar(\"right\", \"Toolbar\");\n    this.bottomToolbar = new Timeline(\"Timeline\");\n    this.canvas = new SpriteCanvas(\"Canvas\");\n  }\n\n  needsRender(_state: Transaction): boolean {\n    return true;\n  }\n\n  render(\n    _store: Store,\n    _element: HTMLElement,\n    style: Style,\n  ): Component[] {\n    style.push(\n      [\n        new StyleItem(\n          `.${this.id}`,\n          `\n          display: grid;\n          grid-template-areas: \n              \"left canvas right\";\n          grid-template-columns: 1fr 3fr 1fr;\n          grid-template-rows: 80% auto;\n          height: calc(100vh - 1rem);\n          width: 100%;\n          border-radius: 10px;\n          `,\n        ),\n      ],\n    );\n    return [\n      this.leftToolbar,\n      this.canvas,\n      this.rightToolbar,\n      this.bottomToolbar,\n    ];\n  }\n}\n", "import {\n  Component,\n  Store,\n  Style,\n  StyleItem,\n  Transaction,\n} from \"../component.ts\";\nimport { FileSelect } from \"./file-select.ts\";\nimport { SpriteCanvas } from \"./sprite-canvas.ts\";\nimport { SpriteEditor } from \"./sprite-editor.ts\";\nimport { Timeline } from \"./timeline.ts\";\nimport { Toolbar } from \"./toolbar.ts\";\n\nexport class AppComponent implements Component {\n  id = `app-component`;\n  needsRender(_state: Transaction): boolean {\n    return true;\n  }\n  render(\n    store: Store,\n    _element: HTMLElement,\n    _style: Style,\n  ): Component[] {\n    let elements: Component[];\n    if (store.state.selectingFile) {\n      elements = [\n        new FileSelect(),\n      ];\n    } else {\n      elements = [\n        new SpriteEditor(),\n      ];\n    }\n    return elements;\n  }\n}\n", "import { Image } from \"./image/image.ts\";\nimport { AppComponent } from \"./components/app-component.ts\";\nimport { AppState, Store } from \"./component.ts\";\n\nconst init = () => {\n  // handle all your on load setup here\n  const _newImage = new Image(\"<put path here>\", \"<put name here>\");\n  // will be useful in the future\n  // window.alert(`\n  //   here is where you would implement image uploading,\n  //   which will give you a path,\n  //   which you use in the constructor of the image,\n  //   which will have the name ${newImage.name}\n  // `);\n};\n\nconst store = new Store(new AppState(), new AppComponent());\nstore.update();\n\nif (document.readyState !== \"loading\") {\n  init();\n} else {\n  self.addEventListener(\"DOMContentLoaded\", init);\n}\n"],
  "mappings": "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",
  "names": ["styling", "store", "store", "store"]
}
