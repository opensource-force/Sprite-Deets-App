{
  "version": 3,
  "sources": ["../../src/component.ts", "../../src/components/file-select.ts", "../../src/controller.ts", "../../src/controllers/sprite-details-controller.ts", "../../src/components/sprite-canvas.ts", "../../src/components/timeline.ts", "../../src/components/toolbar.ts", "../../src/components/sprite-editor.ts", "../../src/components/top-bar.ts", "../../src/components/app-component.ts", "../../src/controllers/app-controller.ts", "../../src/app.ts"],
  "sourcesContent": ["export interface Component {\n  id: string;\n  /// Returns true if the views associated with this component should be updated based on the state update.\n  //needsRender(stateUpdate: StateUpdate): boolean;\n  /// Customize the HTMLElement & Style associated with this Component\n  /// Returns child components, if any\n  render(): void;\n}\n\nexport abstract class ComponentBase implements Component {\n  id: string = `component-base`;\n  class: string = `component-base`;\n\n  public render(): void {\n  }\n\n  protected createElement(type: string = \"div\"): HTMLElement {\n    const element = document.createElement(type);\n    element.id = this.id;\n    return element;\n  }\n\n  protected getSourceElement(): HTMLElement {\n    const element = document.getElementById(this.id);\n    if (!element) {\n      console.error(`Element with id ${this.id} not found`);\n    }\n    return element ?? new HTMLElement();\n  }\n\n  protected setClass(element: HTMLElement, className: string): void {\n    element.className = className;\n  }\n}\n\nexport class StateUpdate {\n  previousState: AppState;\n  currentState: AppState;\n  constructor(previousState: AppState, currentState: AppState) {\n    this.previousState = previousState;\n    this.currentState = currentState;\n  }\n}\n\nexport class Style {\n  element: HTMLStyleElement;\n  id: string;\n  constructor(id: string, element: HTMLStyleElement) {\n    this.id = id;\n    this.element = element;\n  }\n  push(styling: StyleItem[]) {\n    let css = \"\";\n    this.element.textContent = \"\";\n    // styling.forEach((styling) => {\n    //   css = css.concat(\n    //     `\n    //   ${styling.selector} {\n    //     ${styling.styling}\n    //   }\n    //   `,\n    //   );\n    // });\n    this.element.textContent = css;\n  }\n}\n\nexport class StyleItem {\n  selector: string;\n  styling: string;\n  constructor(selector: string, styling: string) {\n    this.selector = selector;\n    this.styling = styling;\n  }\n}\n\nexport class AppState {\n  selectingFile = true;\n  file: File | null = null;\n  clone(): AppState {\n    const clone = new AppState();\n    clone.selectingFile = this.selectingFile;\n    clone.file = this.file;\n    return clone;\n  }\n}\n\nexport class Store {\n  component: Component;\n  previousState: AppState | null = null;\n  state: AppState;\n  lastRenderedComponents: Set<string> = new Set();\n\n  constructor(state: AppState, component: Component) {\n    this.component = component;\n    this.state = state;\n  }\n\n  update() {\n    const currentRenderedComponents = new Set<string>;\n    this.updateComponent(this.component, currentRenderedComponents, null);\n\n    const unrenderedComponents = [...this.lastRenderedComponents].filter(\n      (id) => !currentRenderedComponents.has(id),\n    );\n    unrenderedComponents.forEach((id) => {\n      const element = document.getElementById(id);\n      if (element) {\n        element.remove();\n      }\n      const styleElement = document.getElementById(`${id}-style`);\n      if (styleElement) {\n        styleElement.remove();\n      }\n    });\n    this.lastRenderedComponents = currentRenderedComponents;\n  }\n\n  updateComponent(\n    component: Component,\n    renderedComponents: Set<string>,\n    parent: HTMLElement | null,\n  ) {\n    let needsRender = false;\n    \n    // if (this.previousState) {\n    //   needsRender = component.needsRender(\n    //     new StateUpdate(this.previousState, this.state),\n    //   );\n    // } else {\n    //   needsRender = true;\n    // }\n\n    // if (needsRender) {\n    //   let element = document.getElementById(component.id);\n    //   if (element) {\n    //     while (element.firstChild) {\n    //       element.removeChild(element.firstChild);\n    //     }\n    //     element.remove();\n    //   } else {\n    //     element = document.createElement(\"div\");\n    //     element.id = component.id;\n    //     element.className = component.id;\n    //   }\n\n    //   const styleId = `${component.id}-style`;\n    //   let localStyle = document.getElementById(styleId) as HTMLStyleElement;\n    //   if (!localStyle) {\n    //     localStyle = document.createElement(\"style\");\n    //     localStyle.id = styleId;\n    //   }\n\n    //   const children = component.render(\n    //     this,\n    //     element,\n    //     new Style(styleId, localStyle),\n    //   );\n\n    //   element.append(localStyle);\n    //   if (parent) {\n    //     parent.appendChild(element);\n    //   } else {\n    //     document.body.appendChild(element);\n    //   }\n\n    //   renderedComponents.add(component.id);\n\n    //   children.forEach((child) => {\n    //     this.updateComponent(child, renderedComponents, element);\n    //   });\n    // } else {\n    //   renderedComponents.add(component.id);\n    // }\n\n    // this.previousState = this.state.clone();\n  }\n}\n", "import {\n  ComponentBase,\n\n} from \"../component.ts\";\n\nexport class FileSelect extends ComponentBase {\n\n  constructor() {\n    super();\n    this.id = `file-select`;\n  }\n\n  override render(): void {\n    const modalWidth = 400;\n    const modalPadding = 40;\n\n    // element.innerHTML = `\n    //     <div class=\"modal\" position=\"relative\">\n    //     <svg class=\"border-svg\" width=100% height=100%>\n    //     <rect\n    //       x=10px\n    //       y=10px\n    //       rx=\"20\"\n    //       ry=\"20\"\n    //       fill=\"none\"\n    //       stroke-width=\"4\"\n    //       stroke-dasharray=\"10\"\n    //       stroke-linecap=\"round\"\n    //     />\n    // </svg>\n    //     <h2>Import Spritesheet</h2>\n    //     <p>Choose a file to upload and get started.</p>\n    //     <div class=\"selected-file\">\n    //     ${\n    //   store.state.file === null\n    //     ? `\n    //         <input type=\"file\" id=\"file-input\">\n    //         <label for=\"file-input\">Open a File</label>\n    //     `\n    //     : `\n    //           <div class=\"selected-file-box\">\n    //               <svg class=\"selected-file-cancel-icon\" width=\"20px\" height=\"20px\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" color=\"#e0e0e0\"><path d=\"M6.75827 17.2426L12.0009 12M17.2435 6.75736L12.0009 12M12.0009 12L6.75827 6.75736M12.0009 12L17.2435 17.2426\"></path></svg>\n    //               <span class=\"selected-file-text\">${store.state.file.name}</span>\n    //               <svg class=\"selected-file-proceed-icon\" width=\"20px\" height=\"20px\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" color=\"#e0e0e0\"><path d=\"M7 12.5L10 15.5L17 8.5\"></path><path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\"></path></svg>\n    //           </div>\n    //           `\n    // }\n    //     </div>\n    //     </div>\n    //     `;\n\n    // const cancelIcon = element.querySelector(\".selected-file-cancel-icon\");\n    // if (cancelIcon) {\n    //   cancelIcon.addEventListener(\"click\", () => {\n    //     store.state.file = null;\n    //     store.update();\n    //   });\n    // }\n    // const proceedIcon = element.querySelector(\".selected-file-proceed-icon\");\n    // if (proceedIcon) {\n    //   proceedIcon.addEventListener(\"click\", () => {\n    //     if (store.state.file) {\n    //       store.state.selectingFile = false;\n    //       store.update();\n    //     }\n    //   });\n    // }\n    // const fileInput = element.querySelector(\"#file-input\");\n    // if (fileInput) {\n    //   fileInput.addEventListener(\"change\", (event) => {\n    //     const input = event.target as HTMLInputElement;\n    //     const file = input.files ? input.files[0] : null;\n    //     if (file) {\n    //       store.state.file = file;\n    //     }\n    //     store.update();\n    //   });\n    // }\n    // style.push(\n    //   [\n    //     new StyleItem(\n    //       \"body\",\n    //       `\n    //         font-family: Arial, sans-serif;\n    //         display: flex;\n    //         justify-content: center;\n    //         align-items: center;\n    //         height: 100vh;\n    //         background-color: #f0f0f0;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".modal\",\n    //       `\n    //         position: relative;\n    //         width: ${modalWidth}px;\n    //         padding: ${modalPadding}px;\n    //         background: white;\n    //         border-radius: 30px;\n    //         box-shadow: 0 4px 10px #00000010;\n    //         text-align: center;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".modal h2\",\n    //       `\n    //         font-size: 1.5rem;\n    //         color: #333;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".modal p\",\n    //       `\n    //         font-size: 1rem;\n    //         color: #666;\n    //         margin-top: 8px;\n    //         margin-bottom: 20px;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       '.modal input[type=\"file\"]',\n    //       `\n    //         display: none;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".modal label\",\n    //       `\n    //         display: inline-block;\n    //         font-size: 1rem;\n    //         color: white;\n    //         border-radius: 8px;\n    //         cursor: pointer;\n    //         transition: background-color 0.3s ease;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".border-svg\",\n    //       `\n    //         position: absolute;\n    //         transform: translate(-50%, 0%);\n    //         top: 0px;\n    //         pointer-events: none;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".border-svg rect\",\n    //       `\n    //         height: calc(100% - 20px);\n    //         width: calc(100% - 20px);\n    //         stroke-dashoffset: 20;\n    //         stroke: #f5f5f5;\n    //         transition: stroke-dashoffset 0.2s ease,\n    //           stroke 0.2s ease;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".modal:hover .border-svg rect\",\n    //       `\n    //         stroke-dashoffset: 0;\n    //         stroke: #e0e0e0;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file\",\n    //       `\n    //           display: inline-block;\n    //           padding: 10px 15px 10px 15px;\n    //           background: #000000;\n    //           border-radius: 9px;         \n    //           text-align: center;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file:hover\",\n    //       `\n    //           background-color: #505050;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file-box\",\n    //       `\n    //           display: flex; \n    //           align-items: center;\n    //           justify-content: center;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file-text\",\n    //       `\n    //           margin: 0px 10px 0px 10px;\n    //           color: #f0f0f0;    \n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file-cancel-icon\",\n    //       `\n    //           stroke: #a0a0a0;\n    //           cursor: pointer;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file-cancel-icon:hover\",\n    //       `\n    //           stroke: #fefefe;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file-proceed-icon\",\n    //       `\n    //           stroke: #a0a0a0;\n    //           cursor: pointer;\n    //         `,\n    //     ),\n    //     new StyleItem(\n    //       \".selected-file-proceed-icon:hover\",\n    //       `\n    //           stroke: #fefefe;\n    //         `,\n    //     ),\n    //   ],\n    // );\n    // return [];\n  }\n}\n", "import { Component } from \"./component.ts\";\r\n\r\nexport abstract class Controller {\r\n  private static controllerMap: Map<string, Controller> = new Map();\r\n\r\n  protected readonly components: Component[] = [];\r\n  protected readonly componentsByEvents: Map<string, Component[]> = new Map();\r\n\r\n  register(component: Component) {\r\n    this.components.push(component);\r\n  }\r\n\r\n  registerByEvent(event: string, component: Component) {\r\n    if (!this.componentsByEvents.has(event)) {\r\n      this.componentsByEvents.set(event, []);\r\n    }\r\n    this.componentsByEvents.get(event)?.push(component);\r\n  }\r\n\r\n  unregister(component: Component) {\r\n    const index = this.components.indexOf(component);\r\n    if (index > -1) {\r\n      this.components.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  unregisterByEvent(event: string, component: Component) {\r\n    const components = this.componentsByEvents.get(event);\r\n    if (components) {\r\n      const index = components.indexOf(component);\r\n      if (index > -1) {\r\n        components.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static registerController<T extends Controller>(type: string, controller: T): void {\r\n    this.controllerMap.set(type, controller);\r\n  }\r\n\r\n  public static getController<T>(type: string): T extends Controller ? T : never {\r\n    return this.controllerMap.get(type) as T extends Controller ? T : never;\r\n  }\r\n}\r\n", "import { Controller } from '../controller.ts';\r\n\r\nexport class SpriteCanvasData {\r\n    \r\n    private _pixelSizePx : number = 32;\r\n    public get pixelSizePx() : number {\r\n        return this._pixelSizePx;\r\n    }\r\n    public set pixelSizePx(v: number) {\r\n        this._pixelSizePx = v;\r\n    }\r\n    \r\n}\r\n\r\nexport class SpriteDetailsController extends Controller {\r\n    public static typeName: string = 'SpriteDetailsController';\r\n    spriteCanvasData: SpriteCanvasData = new SpriteCanvasData();\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public updatePixelSizePx(newSize: number) {\r\n        this.spriteCanvasData.pixelSizePx = newSize;\r\n    }\r\n\r\n    public getPixelSizePx(): number {\r\n        return this.spriteCanvasData.pixelSizePx;\r\n    }\r\n\r\n}", "import {\n  ComponentBase,\n} from \"../component.ts\";\nimport { Controller } from \"../controller.ts\";\nimport { SpriteDetailsController } from \"../controllers/sprite-details-controller.ts\";\n\nexport class SpriteCanvas extends ComponentBase {\n  private spriteDetailsController: SpriteDetailsController;\n\n  constructor() {\n    super();\n    this.id = `sprite-canvas`;\n    this.spriteDetailsController = Controller.getController<SpriteDetailsController>(SpriteDetailsController.typeName);\n  }\n\n  override render(): void {\n    const element = this.getSourceElement();\n    const canvas = this.configureCanvas();\n\n    element.style.cssText = `\n      grid-area: canvas;\n      height: auto;\n      background: #ffffff;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 1rem;\n      border-radius: 10px;\n    `;\n    \n    element.appendChild(canvas);\n \n  }\n\n  configureCanvas(): HTMLCanvasElement {\n    const canvas = document.createElement(\"canvas\");\n    canvas.id = \"sprite-canvas-x\";\n    canvas.width = 512;\n    canvas.height = 512;\n    canvas.style.border = \"1px solid #000000\";\n    canvas.addEventListener(\"mousemove\", (e) => {\n      const ctx = canvas.getContext(\"2d\");\n      ctx?.clearRect(0, 0, 512, 512);\n      const pxSize = this.spriteDetailsController.getPixelSizePx();\n      const xPx = Math.floor(e.offsetX / pxSize);\n      const yPx = Math.floor(e.offsetY / pxSize);\n      ctx?.fillText(`x: ${xPx}, y: ${yPx}`, 10, 10);\n      ctx?.fillRect(xPx * pxSize, yPx * pxSize, pxSize, pxSize);\n    });\n    return canvas;\n  }\n}\n", "import {\n  ComponentBase,\n} from \"../component.ts\";\n\nexport class Timeline extends ComponentBase {\n\n  constructor() {\n    super();\n    this.id = `timeline`;\n  }\n\n  override render(): void {\n    const element = this.getSourceElement();\n\n    element.innerHTML = `<p>${this.id}</p>`;\n    element.style.cssText = `\n          grid-column: span 3;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          background: #fff;\n          display: flex;\n          margin-top: 0.5rem;\n          padding: 1rem;\n          border-radius: 10px;\n      `;\n  }\n}\n", "import {\n  ComponentBase\n} from \"../component.ts\";\n\nexport class Toolbar extends ComponentBase {\n\n  constructor() {\n    super();\n    this.id = `toolbar`;\n  }\n\n  override render(): void {\n    const element = this.getSourceElement();\n\n    element.innerHTML = `<button>Button</button>`;\n    element.style.cssText = `\n        grid-area: right;\n        margin-left: 0.5rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 1rem;\n        border-radius: 10px;\n        `;\n  }\n}\n", "import {\n  Component,\n  ComponentBase,\n} from \"../component.ts\";\nimport { SpriteCanvas } from \"./sprite-canvas.ts\";\nimport { Timeline } from \"./timeline.ts\";\nimport { Toolbar } from \"./toolbar.ts\";\n\nexport class SpriteEditor extends ComponentBase {\n  \n  constructor() {\n    super();\n    this.id = `sprite-editor`;\n  }\n\n  // Components\n  rightToolbar: Toolbar = new Toolbar();\n  bottomToolbar: Timeline = new Timeline();\n  canvas: SpriteCanvas = new SpriteCanvas();\n\n  override render() {\n    const element = this.getSourceElement();\n\n    element.innerHTML = `\n      <div id=\"${this.canvas.id}\" class=\"canvas\"></div>\n      <div id=\"${this.rightToolbar.id}\" class=\"toolbar\"></div>\n      <div id=\"${this.bottomToolbar.id}\" class=\"timeline\"></div>\n    `;\n    element.style.cssText = `\n          display: grid;\n          grid-template-areas: \"left canvas right\";\n          grid-template-columns: 1fr 3fr 1fr;\n          grid-template-rows: 80% auto;\n          height: calc(100vh - 1rem);\n          width: 100%;\n          border-radius: 10px;\n          `;\n\n    this.rightToolbar.render();\n    this.bottomToolbar.render();\n    this.canvas.render();\n  }\n}\n", "import { ComponentBase } from \"../component.ts\";\r\n\r\nexport class TopBar extends ComponentBase {\r\n  override id = `top-bar`;\r\n\r\n  override render(): void {\r\n    const element = this.getSourceElement();\r\n\r\n    element.innerHTML = `<span><p>Top Bar</p></span>`;\r\n    element.style.cssText = `\r\n        grid-area: top;\r\n        grid-column: span 3;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 1rem;\r\n        border-radius: 10px;\r\n        background: #ffffff;\r\n    `\r\n  }\r\n}", "import { Component, ComponentBase, StateUpdate, Store, Style } from \"../component.ts\";\nimport { FileSelect } from \"./file-select.ts\";\nimport { SpriteEditor } from \"./sprite-editor.ts\";\nimport { TopBar } from \"./top-bar.ts\";\n\nexport class AppComponent extends ComponentBase {\n  \n  // Components\n  fileSelect: FileSelect = new FileSelect();\n  spriteEditor: SpriteEditor = new SpriteEditor();\n  topBar: TopBar = new TopBar();\n  \n  constructor() {\n    super();\n    this.id = `app-component`;\n  }\n\n  override render(): void {\n    const element = this.getSourceElement();\n\n    element.innerHTML = `\n      <div id=\"${this.topBar.id}\"></div>\n      <div id=\"${this.fileSelect.id}\"></div>\n      <div id=\"${this.spriteEditor.id}\"></div>\n    `;\n\n    this.spriteEditor.render();\n    this.topBar.render();\n  }\n}\n", "import { Controller } from '../controller.ts';\r\n\r\nexport class AppController extends Controller {\r\n  public static typeName: string = 'AppController';\r\n  constructor() {\r\n    super();\r\n  }\r\n}", "import { AppComponent } from \"./components/app-component.ts\";\nimport { Controller } from \"./controller.ts\";\nimport { AppController } from \"./controllers/app-controller.ts\";\nimport { SpriteDetailsController } from \"./controllers/sprite-details-controller.ts\";\n\n\nconst init = () => {\n  Controller.registerController(\n    AppController.typeName,\n    new AppController(),\n  );\n  Controller.registerController(\n    SpriteDetailsController.typeName,\n    new SpriteDetailsController(),\n  );\n\n  new AppComponent().render();\n};\n\ninit();\n"],
  "mappings": "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",
  "names": []
}
