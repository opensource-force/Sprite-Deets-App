{
  "version": 3,
  "sources": ["../../src/image/image.ts", "../../src/component.ts", "../../src/components/toolbar.ts", "../../src/components/sprite-canvas.ts", "../../src/components/timeline.ts", "../../src/components/app-component.ts", "../../src/app.ts"],
  "sourcesContent": ["export class Image {\n  name: string;\n\n  constructor(_path: string, name: string) {\n    // load image from path, and add to the dom\n    // see Hell's example code\n\n    this.name = name;\n  }\n\n  // get pixels(): Array<number> {\n  // get image's pixels from the main canvas\n  // }\n\n  set pixels(newPixels: Array<number>) {\n    // set image's pixels on the main canvas\n  }\n\n  // etc\n}\n", "export interface Component {\n  id: string;\n  render(style: string | null): HTMLElement;\n}\n\nexport function updateStyle(\n  component: Component,\n  contextualStyle: string | null,\n  style: string,\n) {\n  const styleId = `${component.id}-style`;\n  let localStyle = document.getElementById(styleId) as HTMLStyleElement;\n  if (!localStyle) {\n    localStyle = document.createElement(\"style\");\n    localStyle.id = styleId;\n    document.head.appendChild(localStyle);\n  }\n  localStyle.textContent = `\n        .${component.id} {\n            ${contextualStyle === null ? \"\" : contextualStyle}\n            ${style}\n        }\n        `;\n}\n\nexport function updateElement(\n  component: Component,\n  children: HTMLElement[],\n  innerHTML: string | null,\n): HTMLElement {\n  const id = `${component.id}`;\n  let element = document.getElementById(id);\n  if (element) {\n    children.forEach((child) => {\n      element?.removeChild(child);\n    });\n  } else {\n    element = document.createElement(\"div\");\n    element.id = id;\n    element.className = id;\n    document.head.appendChild(element);\n  }\n  children.forEach((child) => {\n    element.append(child);\n  });\n  if (innerHTML) {\n    element.innerHTML = innerHTML;\n  }\n  return element;\n}\n", "import { Component, updateElement, updateStyle } from \"../component.ts\";\n\nexport class Toolbar implements Component {\n  private position: \"left\" | \"right\";\n  private content: string;\n  id: string;\n  toggle: boolean;\n\n  constructor(position: \"left\" | \"right\", content: string) {\n    this.id = `toolbar-${position}`;\n    this.position = position;\n    this.content = content;\n    this.toggle = false;\n  }\n\n  render(contextualStyle: string | null): HTMLElement {\n    updateStyle(\n      this,\n      contextualStyle,\n      `\n      ${this.toggle ? \"background: #fff;\" : \"background: #ee9999;\"}\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 1rem;\n      border-radius: 10px;\n      `,\n    );\n\n    const element = updateElement(this, [], `<p>${this.content}</p>`);\n    element.onclick = () => {\n      setTimeout(() => {\n        this.toggle = !this.toggle;\n        this.render(contextualStyle);\n      }, 500);\n    };\n    return element;\n  }\n}\n", "import { Component, updateElement, updateStyle } from \"../component.ts\";\n\nexport class SpriteCanvas implements Component {\n  private content: string;\n  id = `sprite-canvas`;\n\n  constructor(content: string) {\n    this.content = content;\n  }\n\n  render(contextualStyle: string | null): HTMLElement {\n    updateStyle(\n      this,\n      contextualStyle,\n      `\n      height: auto;\n      background: #ffffff;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 1rem;\n      border-radius: 10px;\n      `,\n    );\n\n    return updateElement(this, [], `<p>${this.content}</p>`);\n  }\n}\n", "import { Component, updateElement, updateStyle } from \"../component.ts\";\n\nexport class Timeline implements Component {\n  private content: string;\n  id = `timeline`;\n\n  constructor(content: string) {\n    this.content = content;\n  }\n\n  render(contextualStyle: string | null): HTMLElement {\n    updateStyle(\n      this,\n      contextualStyle,\n      `\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      background: #fff;\n      display: flex;\n      margin-top: 0.5rem;\n      padding: 1rem;\n      border-radius: 10px;\n      `,\n    );\n\n    return updateElement(this, [], `<p>${this.content}</p>`);\n  }\n}\n", "import { Component, updateElement, updateStyle } from \"../component.ts\";\n\nexport class AppComponent implements Component {\n  leftToolbar: Component;\n  rightToolbar: Component;\n  bottomToolbar: Component;\n  canvas: Component;\n  id = `app-component`;\n\n  constructor(\n    leftToolbar: Component,\n    rightToolbar: Component,\n    bottomToolbar: Component,\n    canvas: Component,\n  ) {\n    this.leftToolbar = leftToolbar;\n    this.rightToolbar = rightToolbar;\n    this.bottomToolbar = bottomToolbar;\n    this.canvas = canvas;\n  }\n\n  render(contextualStyle: string | null): HTMLElement {\n    updateStyle(\n      this,\n      contextualStyle,\n      `\n      display: grid;\n      grid-template-areas: \n          \"left canvas right\";\n      grid-template-columns: 1fr 3fr 1fr;\n      grid-template-rows: 80% auto;\n      height: calc(100vh - 1rem);\n      width: 100%;\n      border-radius: 10px;\n      `,\n    );\n    return updateElement(\n      this,\n      [\n        this.leftToolbar.render(`\n        grid-area: left;\n        margin-right: 0.5rem;\n        `),\n        this.canvas.render(\"grid-area: canvas;\"),\n        this.rightToolbar.render(`\n        grid-area: right;\n        margin-left: 0.5rem;\n        `),\n        this.bottomToolbar.render(\"grid-column: span 3;\"),\n      ],\n      null,\n    );\n  }\n}\n", "import { Image } from \"./image/image.ts\";\nimport { Toolbar } from \"./components/toolbar.ts\";\nimport { SpriteCanvas } from \"./components/sprite-canvas.ts\";\nimport { Timeline } from \"./components/timeline.ts\";\nimport { AppComponent } from \"./components/app-component.ts\";\n\nconst init = () => {\n  // handle all your on load setup here\n  const _newImage = new Image(\"<put path here>\", \"<put name here>\");\n  // will be useful in the future\n  // window.alert(`\n  //   here is where you would implement image uploading,\n  //   which will give you a path,\n  //   which you use in the constructor of the image,\n  //   which will have the name ${newImage.name}\n  // `);\n};\n\nconst app = document.getElementById(\"app\");\n\nif (app) {\n  app.appendChild(\n    new AppComponent(\n      new Toolbar(\"left\", \"Toolbar\"),\n      new Toolbar(\"right\", \"Toolbar\"),\n      new Timeline(\"Timeline\"),\n      new SpriteCanvas(\"Canvas\"),\n    ).render(null),\n  );\n}\n\nif (document.readyState !== \"loading\") {\n  init();\n} else {\n  self.addEventListener(\"DOMContentLoaded\", init);\n}\n"],
  "mappings": "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",
  "names": []
}
